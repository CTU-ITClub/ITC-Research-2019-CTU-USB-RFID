import IQuery = require("./interfaces/IQuery");
import ISheet = require("./interfaces/ISheet");
import Database = require("./Database");
import Document = require("./Document");
/** Collection class */
declare class Collection {
    /** Database > Collection */
    database: Database;
    /** Collection = Sheet*/
    sheet?: ISheet;
    /**
     * Create Collection object
     * @param {Database} database Database of this Collection
     * @param {ISheet} sheet Sheet
     */
    constructor(database: Database, sheet?: ISheet);
    /**
     * Select Documents
     * @param {IQuery} query
     * @returns Document objects array
     */
    select(query: IQuery): Promise<Document[]>;
    /**
     * Insert Document
     * @param {Object} document Inserted Document
     * @returns ID of inserted Document
     */
    insert(document: Object): Promise<string | undefined>;
    /**
     * Update Documents
     * @param {IQuery} query Select query
     * @param {Object} document Updated Document
     * @returns Number of updated Documents
     */
    update(query: IQuery, document: Object): Promise<number | undefined>;
    /**
     * Delete Documents
     * @param {IQuery} query Select query
     * @returns Number of deleted Documents
     */
    delete(query: IQuery): Promise<number | undefined>;
}
export = Collection;
