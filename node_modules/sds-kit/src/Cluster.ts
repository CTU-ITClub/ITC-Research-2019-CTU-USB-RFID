const Spreadsheet = require("google-spreadsheet");
import util = require("util");

import ICreds = require("./interfaces/ICreds");
import ISpreadsheet = require("./interfaces/ISpreadsheet");

import Database = require("./Database");
import Message = require("./Message");

/** Cluster class */
class Cluster {
  /** Create Cluster object */
  constructor() {}

  /**
   * Access to database
   * @param {string} id ID of Google Spreadsheet
   * @param {ICreds} creds Creds for authorization
   * @returns Database object
   */
  public async access(id: string, creds: ICreds): Promise<Database> {
    const spreadsheet: ISpreadsheet = new Spreadsheet(id);
    await util.promisify(spreadsheet.useServiceAccountAuth)(creds);
    await util
      .promisify(spreadsheet.getInfo)()
      .catch(() => Message.error("Access database failed.", "Wrong Spreadsheet ID or Authorization Creds.", "Check Spreadsheet ID and Authorization Creds again."));
    return new Database(this, spreadsheet.info ? spreadsheet : undefined);
  }
}

export = Cluster;
